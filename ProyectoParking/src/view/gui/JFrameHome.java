/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.gui;

import control.DataClass;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import model.Parking;
import model.Plaza;
import model.Vehiculo;
import model.data.enums.EnumColor;
import model.data.enums.EnumVehiculo;
import model.data.exceptions.NotFreePlacesException;
import view.console.Main;

/**
 *
 * @author ivansimmer
 */
public class JFrameHome extends javax.swing.JFrame {

    /**
     * Creates new form JFrameHome
     */
    public JFrameHome() throws NotFreePlacesException {
        initComponents();
        initConfig();
        configParkingGrid();
    }

    private void initConfig() {
        DataClass.JFH = this;
        DataClass.setVisible();
        JLabel labelParking;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonAsignar = new javax.swing.JButton();
        buttonLiberar = new javax.swing.JButton();
        jPanelParking = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        labelParking = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonAsignar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonAsignar.setText("ASIGNAR PLAZA");
        buttonAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAsignarActionPerformed(evt);
            }
        });

        buttonLiberar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        buttonLiberar.setText("LIBERAR PLAZA");
        buttonLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLiberarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(buttonAsignar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonLiberar)
                .addGap(121, 121, 121))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAsignar)
                    .addComponent(buttonLiberar))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout jPanelParkingLayout = new javax.swing.GroupLayout(jPanelParking);
        jPanelParking.setLayout(jPanelParkingLayout);
        jPanelParkingLayout.setHorizontalGroup(
            jPanelParkingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 554, Short.MAX_VALUE)
        );
        jPanelParkingLayout.setVerticalGroup(
            jPanelParkingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );

        labelParking.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        labelParking.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelParking.setText("PARKING");
        labelParking.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelParking, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(labelParking, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jPanelParking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelParking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAsignarActionPerformed
        // TODO add your handling code here:
//        DataClass.JFH.setVisible(false);
//        DataClass.JFP.setVisible(true);
        DataClass.goToAnotherFrame(this, DataClass.JFAP);
    }//GEN-LAST:event_buttonAsignarActionPerformed

    private void buttonLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLiberarActionPerformed
        // TODO add your handling code here:
//        DataClass.JFH.setVisible(false);
//        DataClass.JFPL.setVisible(true);
        DataClass.goToAnotherFrame(this, DataClass.JFLP);
    }//GEN-LAST:event_buttonLiberarActionPerformed

    private void configParkingGrid() throws NotFreePlacesException {
        jPanelParking.removeAll(); // Limpiar el panel antes de actualizar

        // Lista de tarifas
        Map<EnumVehiculo, Double> tarifas = new HashMap<>();
        tarifas.put(EnumVehiculo.COCHE, 5.0);
        tarifas.put(EnumVehiculo.MOTO, 3.0);
        tarifas.put(EnumVehiculo.CAMION, 1.0);
        
        // Crear una instancia de Parking (esto es solo un ejemplo, asegúrate de tener los parámetros correctos)
        Parking parking = new Parking(123, "Parking Monlau", "C/ Monlau 6, Barcelona", "+34 666 66 66", 3, 10, tarifas);

        DataClass.setParking(parking);

        // Verificar que el parking no es null antes de usarlo
        if (DataClass.getParking() == null) {
            System.out.println("Error: No se ha asignado un Parking");
            return;
        }

        labelParking.setText(parking.getNombre());

        // Obtener las plazas desde la instancia de Parking
        ArrayList<ArrayList<Plaza>> listaPlazas = parking.getListaPlazas();

        // Configuramos el GridLayout para que el número de columnas se ajuste a los datos
        int filas = listaPlazas.size();
        int columnas = listaPlazas.get(0).size();
        jPanelParking.setLayout(new java.awt.GridLayout(filas, columnas, 10, 10));

        for (ArrayList<Plaza> piso : listaPlazas) {
            for (Plaza plaza : piso) {
                JLabel label = new JLabel("Plaza " + plaza.getNumeroPlaza(), javax.swing.SwingConstants.CENTER);
                label.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.BLACK));

                // Color de fondo según si la plaza está ocupada o libre
                if (plaza.isOcupada()) {
                    label.setBackground(java.awt.Color.RED);  // Ocupada
                } else {
                    label.setBackground(java.awt.Color.GREEN); // Libre
                }
                label.setOpaque(true);

                jPanelParking.add(label); // Añadimos la etiqueta al panel
            }
        }

        // Revalidamos y repintamos el panel para que los cambios sean reflejados
        jPanelParking.revalidate();
        jPanelParking.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameHome().setVisible(true);
                } catch (NotFreePlacesException ex) {
                    Logger.getLogger(JFrameHome.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAsignar;
    private javax.swing.JButton buttonLiberar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelParking;
    private javax.swing.JLabel labelParking;
    // End of variables declaration//GEN-END:variables

    // Método para actualizar el estado de las plazas
    public void actualizarGrid(Parking parking) {
        jPanelParking.removeAll(); // Limpiar el panel antes de actualizar

        // Obtener las plazas desde la instancia de Parking
        ArrayList<ArrayList<Plaza>> listaPlazas = parking.getListaPlazas();

        // Configuramos el GridLayout para que el número de columnas se ajuste a los datos
        int filas = listaPlazas.size();
        int columnas = listaPlazas.get(0).size();
        jPanelParking.setLayout(new java.awt.GridLayout(filas, columnas, 10, 10));

        // Crear y agregar las etiquetas al panel de acuerdo con el estado de cada plaza
        for (ArrayList<Plaza> piso : listaPlazas) {
            for (Plaza plaza : piso) {
                JLabel label = new JLabel("Plaza " + plaza.getNumeroPlaza(), javax.swing.SwingConstants.CENTER);
                label.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.BLACK));

                // Color de fondo según si la plaza está ocupada o libre
                if (plaza.isOcupada()) {
                    label.setBackground(java.awt.Color.RED);  // Ocupada
                } else {
                    label.setBackground(java.awt.Color.GREEN); // Libre
                }
                label.setOpaque(true);

                jPanelParking.add(label); // Añadimos la etiqueta al panel
            }
        }

        // Revalidamos y repintamos el panel para que los cambios sean reflejados
        jPanelParking.revalidate();
        jPanelParking.repaint();
    }
}
