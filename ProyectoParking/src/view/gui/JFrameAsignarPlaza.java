/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.gui;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import control.DataClass;
import static control.DataClass.JFH;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import model.Parking;
import model.Vehiculo;
import model.data.enums.EnumColor;
import model.data.enums.EnumVehiculo;
import model.data.exceptions.NotFreePlacesException;

/**
 *
 * @author ivansimmer
 */
public class JFrameAsignarPlaza extends javax.swing.JFrame {

    /**
     * Creates new form JFrameHome
     */
    public JFrameAsignarPlaza() {
        // Lista de tarifas
        Map<EnumVehiculo, Double> tarifas = new HashMap<>();
        tarifas.put(EnumVehiculo.AUTO, 5.0);
        tarifas.put(EnumVehiculo.MOTO, 3.0);
        tarifas.put(EnumVehiculo.CAMIONETA, 1.0);

        Parking parking = new Parking(123, "Parking Monlau", "C/ Monlau 6, Barcelona", "+34 666 66 66", 3, 10, tarifas);

        initComponents();
        configColores();
        configVehiculos();

        DataClass.setParking(parking);
        parking = DataClass.getParking();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelForm = new javax.swing.JPanel();
        jLabelMatricula = new javax.swing.JLabel();
        jTextFieldMatricula = new javax.swing.JTextField();
        jLabelTipoVehiculo = new javax.swing.JLabel();
        jComboBoxVehiculos = new javax.swing.JComboBox<>();
        jLabelColor = new javax.swing.JLabel();
        jComboBoxColores = new javax.swing.JComboBox<>();
        jButtonAsigna = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaResultado = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Asignar una plaza");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 58, 255));

        buttonBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/atras (1).png"))); // NOI18N
        buttonBack.setBorderPainted(false);
        buttonBack.setContentAreaFilled(false);
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ASIGNA UNA PLAZA");
        jLabel1.setToolTipText("");

        jPanelForm.setBackground(new java.awt.Color(0, 204, 204));
        jPanelForm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanelForm.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabelMatricula.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelMatricula.setText("Matricula:");

        jTextFieldMatricula.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextFieldMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMatriculaActionPerformed(evt);
            }
        });

        jLabelTipoVehiculo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelTipoVehiculo.setText("Tipo de vehiculo:");

        jComboBoxVehiculos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBoxVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVehiculosActionPerformed(evt);
            }
        });

        jLabelColor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelColor.setText("Color:");

        jComboBoxColores.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBoxColores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxColoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFormLayout = new javax.swing.GroupLayout(jPanelForm);
        jPanelForm.setLayout(jPanelFormLayout);
        jPanelFormLayout.setHorizontalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabelColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTipoVehiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(41, 41, 41)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBoxVehiculos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxColores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTextFieldMatricula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );
        jPanelFormLayout.setVerticalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMatricula)
                    .addComponent(jTextFieldMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTipoVehiculo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelColor))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jButtonAsigna.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButtonAsigna.setText("ASIGNA");
        jButtonAsigna.setToolTipText("");
        jButtonAsigna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAsignaActionPerformed(evt);
            }
        });

        jTextAreaResultado.setEditable(false);
        jTextAreaResultado.setColumns(20);
        jTextAreaResultado.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextAreaResultado.setRows(5);
        jTextAreaResultado.setAutoscrolls(false);
        jTextAreaResultado.setMargin(new java.awt.Insets(2, 40, 2, 0));
        jScrollPane1.setViewportView(jTextAreaResultado);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/smart-parking-1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonBack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(1, 78, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(87, 87, 87))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jPanelForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(jButtonAsigna))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonBack)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAsigna)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
//        DataClass.JFA.setVisible(false);
//        DataClass.JFH.setVisible(true);
        DataClass.goToAnotherFrame(this, DataClass.JFH);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void jComboBoxVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVehiculosActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBoxVehiculosActionPerformed

    private void jButtonAsignaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAsignaActionPerformed
        // Verificamos si el parking está inicializado
        if (DataClass.getParking() != null) {
            String matricula = jTextFieldMatricula.getText();

            // Verificamos si la matrícula está vacía
            if (matricula.isEmpty()) {
                JOptionPane.showMessageDialog(this, "La matrícula no puede estar vacía.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // Obtenemos los valores seleccionados por el usuario
                String tipoVehiculoSeleccionado = jComboBoxVehiculos.getSelectedItem().toString();
                String colorSeleccionado = jComboBoxColores.getSelectedItem().toString();

                // Convertimos los valores seleccionados a los tipos adecuados (Enum)
                EnumVehiculo tipoVehiculo = EnumVehiculo.valueOf(tipoVehiculoSeleccionado);
                EnumColor colorVehiculo = EnumColor.valueOf(colorSeleccionado);

                // Creamos el objeto Vehiculo
                Vehiculo vehiculo = new Vehiculo(tipoVehiculo, matricula, colorVehiculo);

                // Crear el JSON incluyendo el campo 'ticketId' vacío (o null)
                JsonObject jsonObject = new JsonObject();
                jsonObject.addProperty("ticketId", "");  // Aquí lo estamos pasando vacío, puedes poner null si lo prefieres
                jsonObject.addProperty("matricula", vehiculo.getMatricula());
                jsonObject.addProperty("tipo", vehiculo.getTipoVehiculo().toString());
                jsonObject.addProperty("color", vehiculo.getColor().toString());

                try {
                    // Usamos Gson para convertir el vehículo a JSON
                    Gson gson = new Gson();
                    String jsonVehiculo = gson.toJson(jsonObject);

                    // Aquí haríamos la llamada al endpoint del servidor
                    String endpointUrl = "http://localhost:1311/api/parking/reservar"; // Reemplaza con la URL correcta
                    URL url = new URL(endpointUrl);
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                    connection.setRequestMethod("POST");
                    connection.setRequestProperty("Content-Type", "application/json");
                    connection.setDoOutput(true);

                    // Enviamos el JSON del vehículo al servidor
                    try (OutputStream os = connection.getOutputStream()) {
                        byte[] input = jsonVehiculo.getBytes("utf-8");
                        os.write(input, 0, input.length);
                    }

                    // Verificamos la respuesta del servidor
                    int responseCode = connection.getResponseCode();
                    if (responseCode == HttpURLConnection.HTTP_OK) {
                        // Leer la respuesta del servidor
                        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        String inputLine;
                        StringBuilder response = new StringBuilder();

                        while ((inputLine = in.readLine()) != null) {
                            response.append(inputLine);
                        }
                        in.close();

                        // Parseamos la respuesta JSON
                        JsonObject jsonResponse = JsonParser.parseString(response.toString()).getAsJsonObject();

                        // Extraemos los valores de la respuesta
                        String ticketId = jsonResponse.get("ticketId").getAsString();

                        // Mostramos la respuesta en la interfaz
                        jTextAreaResultado.setText("Tu TicketID es: ");
                        jTextAreaResultado.append("\n" + ticketId);
                    } else {
                        // Si ocurrió algún error en la asignación, lo mostramos
                        jTextAreaResultado.setText("Error al reservar la plaza.");
                    }

                    // Actualizamos la vista de la cuadrícula (si es necesario)
                    JFH.actualizarGrid();

                } catch (Exception e) {
                    // En caso de error, mostramos un mensaje
                    JOptionPane.showMessageDialog(this, "Error al realizar la reserva: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            // Si el parking no está inicializado, mostramos un mensaje de error
            JOptionPane.showMessageDialog(this, "No hay un parking asignado. Por favor, inicializa el parking.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAsignaActionPerformed

    private void jComboBoxColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxColoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxColoresActionPerformed

    private void jTextFieldMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMatriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMatriculaActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(JFrameAsignarPlaza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(JFrameAsignarPlaza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(JFrameAsignarPlaza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(JFrameAsignarPlaza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new JFrameAsignarPlaza().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton jButtonAsigna;
    private javax.swing.JComboBox<String> jComboBoxColores;
    private javax.swing.JComboBox<String> jComboBoxVehiculos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelColor;
    private javax.swing.JLabel jLabelMatricula;
    private javax.swing.JLabel jLabelTipoVehiculo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelForm;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaResultado;
    private javax.swing.JTextField jTextFieldMatricula;
    // End of variables declaration//GEN-END:variables

    private void configColores() {
        for (EnumColor color : EnumColor.values()) {
            jComboBoxColores.addItem(color.toString());
        }
    }

    private void configVehiculos() {
        // Llenamos el ComboBox con los valores del Enum
        for (EnumVehiculo vehiculo : EnumVehiculo.values()) {
            jComboBoxVehiculos.addItem(vehiculo.toString());
        }
    }
}
